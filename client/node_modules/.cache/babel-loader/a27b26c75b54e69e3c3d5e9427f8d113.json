{"ast":null,"code":"import _asyncToGenerator from\"/Users/marco/Development/complete nodeJS developer in 2023 /NASA-PROJECT/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/marco/Development/complete nodeJS developer in 2023 /NASA-PROJECT/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000/v1';// Load planets and return as JSON.\nfunction httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}// Load launches, sort by flight number, and return as JSON.\nfunction _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}// Submit given launch data to launch system.\nfunction _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchedLaunches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchedLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchedLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}// Delete launch with given ID.\nfunction _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"\".concat(API_URL,\"/launches/:\").concat(id),{method:\"delete\"});case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);return _context4.abrupt(\"return\",{ok:false});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id","console","log"],"sources":["/Users/marco/Development/complete nodeJS developer in 2023 /NASA-PROJECT/client/src/hooks/requests.js"],"sourcesContent":["const API_URL = 'http://localhost:8000/v1';\n\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n    const response = await fetch(`${API_URL}/launches`);\n    const fetchedLaunches = await response.json();\n    return fetchedLaunches.sort((a, b) => {\n      return a.flightNumber - b.flightNumber;\n    });\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch),\n    });\n  } catch(err) {\n    return{\n      ok: false,\n    }\n  }\n}\n\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/:${id}`, {\n      method: \"delete\",\n    });\n  } catch(err) {\n    console.log(err);\n    return {\n      ok: false,\n    }\n  }\n  \n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"6UAAA,GAAMA,QAAO,CAAG,0BAA0B,CAE1C;AAAA,QACeC,eAAc,iDAK7B;AAAA,mGALA,sKACyBC,MAAK,WAAIF,OAAO,aAAW,QAA5CG,QAAQ,qCACDA,SAAQ,CAACC,IAAI,EAAE,6GAC7B,yDAGcC,gBAAe,kDAQ9B;AAAA,qGARA,4LAC2BH,MAAK,WAAIF,OAAO,cAAY,QAA7CG,QAAQ,uCACgBA,SAAQ,CAACC,IAAI,EAAE,QAAvCE,eAAe,iDACdA,eAAe,CAACC,IAAI,CAAC,SAACC,CAAC,CAAEC,CAAC,CAAK,CACpC,MAAOD,EAAC,CAACE,YAAY,CAAGD,CAAC,CAACC,YAAY,CACxC,CAAC,CAAC,0DACL,0DAGcC,iBAAgB,qDAgB/B;AAAA,uGAhBA,kBAAgCC,MAAM,8JAErBV,MAAK,WAAIF,OAAO,cAAa,CACxCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAC7B,CAAC,CAAC,qJAEI,CACJM,EAAE,CAAE,KACN,CAAC,uEAEJ,2DAGcC,gBAAe,0JAA9B,kBAA+BC,EAAE,8JAEhBlB,MAAK,WAAIF,OAAO,uBAAcoB,EAAE,EAAI,CAC/CP,MAAM,CAAE,QACV,CAAC,CAAC,oHAEFQ,OAAO,CAACC,GAAG,cAAK,CAAC,iCACV,CACLJ,EAAE,CAAE,KACN,CAAC,wEAGJ,kDAED,OACEjB,cAAc,CACdI,eAAe,CACfM,gBAAgB,CAChBQ,eAAe"},"metadata":{},"sourceType":"module"}